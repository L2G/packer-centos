# Kickstart file automatically generated by anaconda.

#version=DEVEL
install
cdrom
text
lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp --noipv6
rootpw --plaintext vagrant
firewall --service=ssh
authconfig --enableshadow --passalgo=sha512
selinux --disabled
timezone --utc
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"

# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work

# Clean out the old disk config
zerombr

# Clean out old partitions
clearpart --all --drives=sda

# Make a new partition for the volgroup
part pv.008002 --size=39000 --ondisk=sda

# Make the volgroup
volgroup VolGroup --pesize=4096 pv.008002

# Make / on the volgroup
logvol / --fstype=ext4 --name=lv_root --vgname=VolGroup --grow --size=1024 --maxsize=37000

# Setup swap on the volgroup
logvol swap --name=lv_swap --vgname=VolGroup --grow --size=2016 --maxsize=2016

# Setup the boot partition on the volgroup
part /boot --fstype=ext4 --size=500

# Location of the package data
url --url http://mirrors.usinternet.com/centos/6.4/os/x86_64/
repo --name=epel --baseurl=http://download.fedoraproject.org/pub/epel/6/x86_64/
repo --name=updates --baseurl=http://mirrors.usinternet.com/centos/6.4/updates/x86_64/

%packages --nobase
	@core

	# For the virtualbox additions
	kernel-devel
	kernel-headers  
	make 
	dkms
	bzip2
	openssh-clients
	nano
	htop

	# required to build ruby
	# should be kept for gems that build native extensions.
	wget
	automake
	gcc
	cpp
	glibc-devel
	glibc-headers
	glibc-kernheaders
	glibc
	glibc-common
	libgcc
%end

%post

		#######################################################
		# Install Puppet
		#######################################################

		# Install puppet labs repo
		echo "Configuring PuppetLabs repo..."
		yum install -y http://yum.puppetlabs.com/el/6/products/i386/puppetlabs-release-6-7.noarch.rpm

		# Install Puppet...
		echo "Installing puppet"
		yum install -y puppet
		echo "Puppet installed!"

		#######################################################
		# Turn off un-needed services
		#######################################################
		chkconfig sendmail off
		chkconfig vbox-add-x11 off
		chkconfig smartd off
		chkconfig ntpd off
		chkconfig cupsd off

		#######################################################
		# Setup for Vagrant
		#######################################################
		# update root certs
		wget -O/etc/pki/tls/certs/ca-bundle.crt http://curl.haxx.se/ca/cacert.pem
		# vagrant
		date > /etc/vagrant_box_build_time
		groupadd vagrant -g 999
		useradd vagrant -g vagrant -G wheel -u 900
		echo "vagrant" | passwd --stdin vagrant
		# sudo
		echo "vagrant        ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers
		sed -i "s/^.*requiretty/#Defaults requiretty/" /etc/sudoers
		# sudo
		sudo -u vagrant mkdir /home/vagrant/.ssh 
		sudo -u vagrant curl -k https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub > /home/vagrant/.ssh/authorized_keys
		chmod 0755 /home/vagrant/.ssh
		chmod 0644 /home/vagrant/.ssh/authorized_keys

		########################################################
		# Cleanup for compression
		#######################################################
		
		# Cleanup other files we do not need
		yum -y groupremove "Dialup Networking Support" Editors "Printing Support" "Additional Development" "E-mail server"

		#######################################################
		# The system can now be packaged with 
		# `vagrant package VMNAME`
		#######################################################
		echo 'All done, have fun!!!`'

%end

reboot